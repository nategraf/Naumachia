version: '2.4'

services:
    {% if eve -%}
    # Eve is container designed to connect to the network for testing a debugging
    eve:
        build: ./eve/build
        networks:
            default:
            internal:
        stdin_open: true
        tty: true
        volumes:
            - ./eve/config:/config
            - ./:/mnt/host
        privileged: true

    {% endif -%}
    # Bootstrapper is an arbitrary container run on the host network to mount the host netns.
    # See https://github.com/nategraf/Naumachia/issues/31 for more details.
    bootstrapper:
        image: alpine
        network_mode: host
        command: ["/bin/true"]

    {% for name, challenge in challenges.items() -%}
    openvpn-{{ name }}:
        build:
            context: ./openvpn/build
            args:
                - OVPN_REPO_URL
                - OVPN_REPO_BRANCH
        image: naumachia/openvpn
        depends_on:
            - bootstrapper
        cap_add:
            - NET_ADMIN
        restart: unless-stopped
        networks:
            default:
            internal:
        ports:
            - "{{ challenge.port }}:1194/udp"
        volumes:
            - ./openvpn/config/{{ name }}:/etc/openvpn
            - ./logs/{{ name }}:/var/log
            - /var/run/docker/netns/default:/var/run/netns/host
            - ./openvpn/scripts:/scripts:ro
        environment:
            - REDIS_HOSTNAME
            - REDIS_PORT
            - REDIS_DB
            - REDIS_PASSWORD
            - NAUM_FILES={{ challenge.files|tojson }}
            - NAUM_CHAL="{{ name }}"

    {% endfor -%}
    {% if registrar -%}
    registrar:
        build: ./registrar
        image: naumachia/registrar
        volumes:
            - ./openvpn/config/:/var/openvpn
            - ./registrar/app:/app:ro
            - ./logs/registrar:/var/log/gunicorn
            {% if registrar.tls_enabled -%}
            - ./registrar/certs/registrar{% if domain %}.{{ domain }}{% endif %}.crt:/etc/ssl/registrar.crt
            - ./registrar/certs/registrar{% if domain %}.{{ domain }}{% endif %}.key:/etc/ssl/registrar.key
            - ./registrar/certs/ca{% if domain %}.{{ domain }}{% endif %}.crt:/etc/ssl/ca.crt
            {%- endif %}
        environment:
            - OPENVPN_BASE=/var/openvpn
            - TLS_ENABLED={{ registrar.tls_enabled }}
            - TLS_VERIFY_CLIENT={{ registrar.tls_verify_client }}
        networks:
            internal:
            {{ registrar.network }}:
        ports:
            - "{{ registrar.port }}:3960"
        restart: unless-stopped

    {% endif -%}
    redis:
        image: redis:alpine
        networks:
            internal:
                aliases:
                    - "$REDIS_HOSTNAME"
        volumes:
            - ./redis/config:/usr/local/etc/redis
            - ./logs:/data/log
        environment:
            - REDIS_PASSWORD
        command: [redis-server, /usr/local/etc/redis/redis.conf, --requirepass, $REDIS_PASSWORD]
        restart: unless-stopped

    manager:
        build: ./manager/build
        image: naumachia/manager
        depends_on:
            - bootstrapper
        networks:
            internal:
        volumes:
            - ./manager/app:/app
            - {{ challenges_directory }}:/challenges
            - /var/run/docker.sock:/var/run/docker.sock
            - /var/run/docker/netns/default:/var/run/netns/host
            - ./logs:/var/log
        command: [python, -m, app]
        environment:
            - LOG_FILE=/var/log/manager.log
            - REDIS_HOSTNAME
            - REDIS_PORT
            - REDIS_DB
            - REDIS_PASSWORD
        privileged: true # TODO: Narrow down privileges
        restart: unless-stopped


networks:
    internal:
        internal: true
    {% if registrar and registrar.network not in ("default", "internal") -%}
    {{ registrar.network }}:
        external: true
    {%- endif -%}
